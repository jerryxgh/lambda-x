# use C-', since C-b conflict with vim's C-a C-b
set-option -g prefix C-]
unbind-key C-]
bind-key C-] send-prefix

set -sg escape-time 1
set -g extended-keys off

# Use the mouse to select text and copy it to the clipboard
set -g mouse on

# Let's say you SSH into a host, start tmux, and then run Emacs. A little later
# you detach your session and log out. You then SSH back into the same host, and
# re-attach your session. Your Emacs process is still running right where you
# left it, but the $SSH_TTY environment variable it inherited from the shell is
# now stale (or longer accurate) as it still points to your old SSH tty. This
# means that Clipetty will no longer function in tmux windows that were created
# during your previous login until you manually update the $SSH_TTY environment
# variable.
# Thankfully in tmux there is an easy way of dealing with this problem! Add the
# following to your .tmux.conf file:
# This will tell tmux to update its local $SSH_TTY environment variable when you
# re-attach, and Clipetty will ask tmux about it rather than relying on the
# (possibly stale) variable that Emacs inherited from the shell.
set -ag update-environment "SSH_TTY"

setw -g mode-keys vi

# enable C-; like binding in emacs
set -as terminal-features '*:extkeys'

# Enable RGB colour if running in alacritty(1)
# set -g default-terminal "alacritty"
set-option -sa terminal-overrides ",alacritty*:Tc"

# Enable RGB colour if running in xterm(1)
# set-option -sa terminal-overrides ",xterm*:Tc"
